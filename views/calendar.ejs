<%- include("partials/header") -%>
<title>Event Calendar</title>
<link rel="stylesheet" href="/styles/styles.css">
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">
  

<style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  
}

.body {
  display: flex;
  align-items: center;
  padding: 0 10px;
  justify-content: center;
  min-height: 100vh;
  font-family: 'Poppins', sans-serif;
}

.wrapper {
  width: 450px;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
}

.wrapper header {
  display: flex;
  align-items: center;
  padding: 25px 30px 10px;
  justify-content: space-between;
}

header .icons {
  display: flex;
}

header .icons span {
  height: 38px;
  width: 38px;
  margin: 0 1px;
  cursor: pointer;
  color: #878787;
  text-align: center;
  line-height: 38px;
  font-size: 1.9rem;
  user-select: none;
  border-radius: 50%;
}

.icons span:last-child {
  margin-right: -10px;
}

header .icons span:hover {
  background: #f2f2f2;
}

header .current-date {
  font-size: 1.45rem;
  font-weight: 500;
}

.calendar {
  padding-right: 30px;
}

.calendar ul {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  text-align: center;
}

.calendar .days {
  margin-bottom: 20px;
}

.calendar li {
  color: #333;
  width: calc(100% / 7);
  font-size: 1.07rem;
}

.calendar .weeks li {
  font-weight: 500;
  cursor: default;
}

.calendar .days li {
  z-index: 1;
  cursor: pointer;
  position: relative;
  margin-top: 30px;
}

.days li.inactive {
  color: #aaa;
}

.days li.active {
  color: #fff;
}

.days li::before {
  position: absolute;
  content: "";
  left: 50%;
  top: 50%;
  height: 40px;
  width: 40px;
  z-index: -1;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}

.days li.active::before {
  background: #9B59B6;
}

.days li:not(.active):hover::before {
  background: #f2f2f2;
}

.event-card {
  padding: 20px;
}

.mycard {
  border: 1px solid #ccc;
  padding: 10px;
  margin: 10px 0;
  border-radius: 5px;
}

.mycard h2 {
  margin-bottom: 10px;
  font-size: 1.4rem;
  font-weight: 500;
  text-transform: capitalize;
}
.days li.active-event::before {
  background: lightgreen; /* Change this to your preferred color */
}

.mycard p {
  margin-bottom: 10px;
  font-size: 1.2rem;
  font-weight: 400;
}

.view-details {
  display: inline-block;
  padding: 5px 10px;
  background: #9B59B6;
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
}
</style>
</head>

<body>
    <%- include("partials/navbar") -%>
    <div class="body">
        <div class="wrapper">
          <header>
            <p class="current-date"></p>
            <div class="icons">
              <span id="prev" class="material-symbols-rounded">chevron_left</span>
              <span id="next" class="material-symbols-rounded">chevron_right</span>
            </div>
          </header>
          <div class="calendar">
            <ul class="weeks">
              <li>Sun</li>
              <li>Mon</li>
              <li>Tue</li>
              <li>Wed</li>
              <li>Thu</li>
              <li>Fri</li>
              <li>Sat</li>
            </ul>
            <ul class="days"></ul>
          </div>
          <div class="event-card"></div>
        </div>
      </div>
    
      <script>
        const daysTag = document.querySelector(".days");
        const currentDate = document.querySelector(".current-date");
        const prevNextIcon = document.querySelectorAll(".icons span");
        let date = new Date();
        let currYear = date.getFullYear();
        let currMonth = date.getMonth();
        const months = ["January", "February", "March", "April", "May", "June", "July",
          "August", "September", "October", "November", "December"];
        const events = <%- JSON.stringify(events) %>;
        console.log(events)
        const renderCalendar = () => {
  let firstDayOfMonth = new Date(currYear, currMonth, 1).getDay();
  let lastDateOfMonth = new Date(currYear, currMonth + 1, 0).getDate();
  let lastDayOfMonth = new Date(currYear, currMonth, lastDateOfMonth).getDay();
  let lastDateOfLastMonth = new Date(currYear, currMonth, 0).getDate();
  let liTag = "";

  for (let i = firstDayOfMonth; i > 0; i--) {
    liTag += `<li class="inactive">${lastDateOfLastMonth - i + 1}</li>`;
  }

  for (let i = 1; i <= lastDateOfMonth; i++) {
    let isToday = i === date.getDate() && currMonth === new Date().getMonth() &&
      currYear === new Date().getFullYear() ? "active" : "";
    
    // Check if there's an event on this date and mark it as active
    events.forEach(event => {
      const eventDate = new Date(event.eventdate);
      if (eventDate.getDate() === i && eventDate.getMonth() === currMonth && eventDate.getFullYear() === currYear) {
        isToday = "active-event";
      }
    });

    liTag += `<li class="${isToday}" data-date="${i}">${i}</li>`;
  }

  for (let i = lastDayOfMonth; i < 6; i++) {
    liTag += `<li class="inactive">${i - lastDayOfMonth + 1}</li>`;
  }

  currentDate.innerText = `${months[currMonth]} ${currYear}`;
  daysTag.innerHTML = liTag;

  const days = document.querySelectorAll(".days li");
  days.forEach(day => {
    day.addEventListener("click", (e) => {
      const selectedDate = new Date(currYear, currMonth, e.target.dataset.date);
      displayEvents(selectedDate);
    });
  });
}

    
        const displayEvents = (selectedDate) => {
          const eventCard = document.querySelector(".event-card");
          eventCard.innerHTML = "";
    
          events.forEach(event => {
            const eventDate = new Date(event.eventdate);
            if (eventDate.toDateString() === selectedDate.toDateString()) {
              eventCard.innerHTML += `
                <div class="mycard">
                  <h2>Event Name: ${event.eventname}</h2>
                  <h2>Organizer: ${event.fname}</h2>
                  <h2>Location: ${event.location}</h2>
                  <p>Event Date: ${new Date(event.eventdate).toLocaleDateString()}</p>
                   <p>Contact: ${event.contact}</p>
                </div>
              `;
            }
          });
        }
    
        renderCalendar();
    
        prevNextIcon.forEach(icon => {
          icon.addEventListener("click", () => {
            currMonth = icon.id === "prev" ? currMonth - 1 : currMonth + 1;
    
            if (currMonth < 0 || currMonth > 11) {
              date = new Date(currYear, currMonth, new Date().getDate());
              currYear = date.getFullYear();
              currMonth = date.getMonth();
            } else {
              date = new Date();
            }
    
            renderCalendar();
          });
        });
      </script>
    <%- include("partials/footer") -%>
</body>
</html>
